PrimeSensor Modules for OpenNI
------------------------------
Website: www.primesense.com

Release Notes:
--------------
* At the moment, the default is to compile the code with SSE3 support (this is also true for the supplied binaries). 
  If you have a CPU without such support, please remove the sse compiler flags from the make files.
  (A good hint for this error is that you encounter an "illegal instructions" messages)
* By default, the linux kernel mounts unknown USB devices with write permissions to root only, and read-only permissions to other users.
  When not running as root, this prevents communicating with the device. To fix this issue:
  - Navigate to Platform/Linux-x86/Build
  - run 'make install-usb-rules'
  - if the device was connected, unplug and reconnect it.
  This part is done automatically by the install script, but you will need to do it manually if you choose not to use the automated install.
* The device driver contains a thread for reading from the USB device. This thread should have high priority in order to function correctly. Each process using the device driver should have the CAP_SYS_NICE capability in order to raise thread priority. Failing to have that capability, will cause a failure in setting priority, consequently causing loss of data.
  
Build Notes:
------------
Windows:
	Requirements:
		1) Microsoft Visual Studio 2008/2010
		2) Python 2.x/3.x (must be at least 2.6 and above)
		3) PyWin32 
		4) NSIS 2.46
		5) NSIS-2.46-strlen_8192.zip patch (An important patch to fix problems with adding strings to the path. you can find it in the Platform\Win32\Build\Prerequisites\ directory)
		6) Doxygen & GraphViz (to create docs...)
		7) OpenNI 1.x
		
	Building Sensor:
		1) Go into the directory: "Platform\Win32\CreateRedist". Run the script: "Redist.py". This will compile and prepare the redist exe files that includes everything.
		2) Install the exe you've just made which is located in Platform\Win32\CreateRedist\Output\Sensor-Win32-5.0.0.exe
		   The installer will also automatically register all the modules into OpenNI via the NiReg utility.
		   
		The visual studio solution is located in: Platform\Win32\Build\EngineWin32.sln.
		
	Important: Please note that even though the directory is called Win32, you can also use it to compile it for 64-bit targets (AMD64/x64).
	   
Linux:
	Requirements:
		1) GCC 4.x
		2) Python 2.6/2.7/3.0/3.1
		3) libusb 1.0.8 (libusb-1.0-0-dev)
		4) freeglut3 (freeglut3-dev)
		5) Doxygen & GraphViz (to create docs...)
		6) OpenNI 1.x

	Building Sensor:
		1) Go into the directory: "Platform/Linux-x86/CreateRedist". Run the script: "RedistMaker". This will compile everything and create a redist package in the "Platform/Linux-x86/Redist" directory.
		2) Go into the directory: "Platform/Linux-x86/Redist". Run the script: "sudo ./install.sh" (needs to run as root)
		
		The install script copies key files to the following location:
			Libs into: /usr/lib 
			Bins into: /usr/bin
			Config files: /usr/etc/primesense
			USB rules: /etc/udev/rules.d 
			Logs will be created in: /var/log/primesense
			
		To build the package manually, you can run make in the "Platform\Linux-x86\Build" directory.
		(You can also find a SlickEdit project there...)
		
	Important: Please note that even though the directory is called Linux-x86, you can also use it to compile it for 64-bit targets and pretty much any other linux based environment.
	